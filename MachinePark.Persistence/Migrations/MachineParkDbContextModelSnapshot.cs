// <auto-generated />
using System;
using MachinePark.Persistence.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MachinePark.Persistence.Migrations
{
    [DbContext(typeof(MachineParkDbContext))]
    partial class MachineParkDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MachinePark.Domain.Entities.Machine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MachineTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MachineTypeId");

                    b.ToTable("Machine", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("81ce2195-afe8-4b08-98bc-542392cf508f"),
                            MachineTypeId = 1,
                            Name = "Machine 1",
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("4b7d6609-ae60-4a7f-80df-ff0740b236c0"),
                            MachineTypeId = 2,
                            Name = "Machine 2",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("3a726f02-04a7-41d5-a3ae-62ca638d6906"),
                            MachineTypeId = 3,
                            Name = "Machine 3",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("23ac64b9-7d24-4c7c-8b85-7964c8e852ac"),
                            MachineTypeId = 1,
                            Name = "Machine 4",
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("e9857c63-d173-4322-a75b-8ad7df9a6b2a"),
                            MachineTypeId = 2,
                            Name = "Machine 5",
                            Status = 1
                        });
                });

            modelBuilder.Entity("MachinePark.Domain.Entities.MachineType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MachineType", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Excavator"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Wheel Loader"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Dozer"
                        });
                });

            modelBuilder.Entity("MachinePark.Domain.Entities.Machine", b =>
                {
                    b.HasOne("MachinePark.Domain.Entities.MachineType", "MachineType")
                        .WithMany("Machines")
                        .HasForeignKey("MachineTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineType");
                });

            modelBuilder.Entity("MachinePark.Domain.Entities.MachineType", b =>
                {
                    b.Navigation("Machines");
                });
#pragma warning restore 612, 618
        }
    }
}
